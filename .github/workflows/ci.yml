name: Voxify CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # TODO: Linting job
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check code
  #       uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'

  #     - name: Install flake8 and black
  #       run: |
  #         pip install flake8 black

  #     - name: Run flake8
  #       run: |
  #         flake8 backend/api backend/scripts backend/tests

  #     - name: Run black (check mode)
  #       run: |
  #         black --check backend/api backend/scripts backend/tests

  docker-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Verify Docker Compose availability
        run: docker compose version

      - name: Build services
        run: |
          docker build -f backend/Dockerfile.base -t backend-base:latest backend
          DOCKER_BUILDKIT=0 docker compose -f docker-compose.yml build

      - name: Run DB init
        run: docker compose -f docker-compose.yml run --rm db-init

      - name: Start API in background
        run: | 
          docker compose -f docker-compose.yml up -d api
          echo "Waiting for API to start..."
          sleep 10

      - name: Run tests
        run: docker compose -f docker-compose.yml run --rm tests

      - name: Shut down services
        run: docker compose -f docker-compose.yml down --volumes

  docker-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: docker-test
    if: github.ref == 'refs/heads/main'  # only on push to main

    steps:
      - name: Check code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # TODO: get this set up
          password: ${{ secrets.DOCKER_PASSWORD }}  # TODO: get this set up

      - name: Build and push API image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/voxify:latest -f backend/api/Dockerfile backend/api
          docker push ${{ secrets.DOCKER_USERNAME }}/voxify:latest
